{
  "info": {
    "name": "NextBrain Backend API - Complete",
    "description": "Complete API collection for NextBrain backend application with all endpoints\n\n## Test Flow:\n1. Send invitation to user email\n2. Check email for invitation link and token\n3. Accept invitation (GET to see form, POST to accept)\n4. Register with accepted invitation email\n5. Login with username/password\n6. Use Bearer token for authenticated endpoints\n\n## Working Test User:\n- Username: testuser\n- Email: gaithrouahi1730@gmail.com\n- Password: password123\n\n## Variables:\n- base_url: API base URL\n- access_token: JWT token from login\n- user_id: Current user ID\n- chat_id: Current chat ID\n- invitation_token: Token from invitation email",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "3.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "chat_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "invitation_token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Root & Health",
      "item": [
        {
          "name": "Root Hello",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Basic hello endpoint"
          }
        },
        {
          "name": "App Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "General application health check"
          }
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"gaithrouahi1730@gmail.com\",\n  \"username\": \"testuser\",\n  \"password\": \"password123\",\n  \"fullName\": \"Test User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user account"
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Extract access token from response",
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.accessToken) {",
                  "        pm.collectionVariables.set('access_token', responseJson.accessToken);",
                  "    }",
                  "    if (responseJson.user && responseJson.user.id) {",
                  "        pm.collectionVariables.set('user_id', responseJson.user.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Login with email and password"
          }
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Refresh access token using refresh token from cookies"
          }
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            },
            "description": "Get authenticated user profile"
          }
        },
        {
          "name": "Get Current User (Me)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            },
            "description": "Get current authenticated user information"
          }
        },
        {
          "name": "Verify Email",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/verify-email?token=YOUR_VERIFICATION_TOKEN",
              "host": ["{{base_url}}"],
              "path": ["auth", "verify-email"],
              "query": [
                {
                  "key": "token",
                  "value": "YOUR_VERIFICATION_TOKEN",
                  "description": "Email verification token"
                }
              ]
            },
            "description": "Verify email address using token from email link"
          }
        },
        {
          "name": "Resend Verification Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/resend-verification",
              "host": ["{{base_url}}"],
              "path": ["auth", "resend-verification"]
            },
            "description": "Resend email verification"
          }
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/forgot-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "forgot-password"]
            },
            "description": "Request password reset email"
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"reset_token_here\",\n  \"password\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/reset-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "reset-password"]
            },
            "description": "Reset password with token"
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            },
            "description": "Logout user and clear tokens"
          }
        }
      ]
    },
    {
      "name": "Users Management",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/profile",
              "host": ["{{base_url}}"],
              "path": ["users", "profile"]
            },
            "description": "Get current user profile information"
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "username",
                  "value": "newusername",
                  "type": "text"
                },
                {
                  "key": "fullName",
                  "value": "New Full Name",
                  "type": "text"
                },
                {
                  "key": "bio",
                  "value": "Updated bio",
                  "type": "text"
                },
                {
                  "key": "location",
                  "value": "New Location",
                  "type": "text"
                },
                {
                  "key": "profileImage",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/users/profile",
              "host": ["{{base_url}}"],
              "path": ["users", "profile"]
            },
            "description": "Update user profile with optional file upload"
          }
        },
        {
          "name": "Update Password",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"oldpassword123\",\n  \"newPassword\": \"newpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/password",
              "host": ["{{base_url}}"],
              "path": ["users", "password"]
            },
            "description": "Update user password"
          }
        },
        {
          "name": "Update Account Type",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"accountType\": \"PREMIUM\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/account",
              "host": ["{{base_url}}"],
              "path": ["users", "account"]
            },
            "description": "Update user account type"
          }
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Get list of all users (admin function)"
          }
        },
        {
          "name": "Delete Account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/account",
              "host": ["{{base_url}}"],
              "path": ["users", "account"]
            },
            "description": "Delete user account permanently"
          }
        }
      ]
    },
    {
      "name": "Llama AI Chat",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/llama/health",
              "host": ["{{base_url}}"],
              "path": ["llama", "health"]
            },
            "description": "Check Ollama connection and model availability (no auth required)"
          }
        },
        {
          "name": "Create Chat",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201 || pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.chatId) {",
                  "        pm.collectionVariables.set('chat_id', responseJson.chatId);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"My New Llama Chat\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/llama/chat/create",
              "host": ["{{base_url}}"],
              "path": ["llama", "chat", "create"]
            },
            "description": "Create a new Llama chat session"
          }
        },
        {
          "name": "Send Message (Streaming)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"role\": \"user\",\n  \"content\": \"Hello! Tell me a short story about AI.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/llama/chat/{{chat_id}}/message/stream",
              "host": ["{{base_url}}"],
              "path": ["llama", "chat", "{{chat_id}}", "message", "stream"]
            },
            "description": "Send message with streaming response (recommended for better performance)"
          }
        },
        {
          "name": "Send Message (Non-Streaming)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"role\": \"user\",\n  \"content\": \"Hello! Can you tell me a short joke?\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/llama/chat/{{chat_id}}/message",
              "host": ["{{base_url}}"],
              "path": ["llama", "chat", "{{chat_id}}", "message"]
            },
            "description": "Send message with complete response (60s timeout)"
          }
        },
        {
          "name": "Get Chat History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/llama/chat/{{chat_id}}",
              "host": ["{{base_url}}"],
              "path": ["llama", "chat", "{{chat_id}}"]
            },
            "description": "Get chat history and all messages"
          }
        },
        {
          "name": "List All Chats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/llama/chat",
              "host": ["{{base_url}}"],
              "path": ["llama", "chat"]
            },
            "description": "Get all Llama chats for the user"
          }
        },
        {
          "name": "Update Chat Title",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Chat Title\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/llama/chat/{{chat_id}}/title",
              "host": ["{{base_url}}"],
              "path": ["llama", "chat", "{{chat_id}}", "title"]
            },
            "description": "Update the title of a chat"
          }
        },
        {
          "name": "Regenerate Response",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/llama/chat/{{chat_id}}/regenerate",
              "host": ["{{base_url}}"],
              "path": ["llama", "chat", "{{chat_id}}", "regenerate"]
            },
            "description": "Regenerate the last assistant response"
          }
        },
        {
          "name": "Delete Chat",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/llama/chat/{{chat_id}}",
              "host": ["{{base_url}}"],
              "path": ["llama", "chat", "{{chat_id}}"]
            },
            "description": "Delete a specific chat"
          }
        },
        {
          "name": "Delete All Chats",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/llama/chat/all",
              "host": ["{{base_url}}"],
              "path": ["llama", "chat", "all"]
            },
            "description": "Delete all Llama chats"
          }
        }
      ]
    },
    {
      "name": "Gemini AI Chat",
      "item": [
        {
          "name": "Create Chat",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201 || pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.chatId) {",
                  "        pm.collectionVariables.set('chat_id', responseJson.chatId);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"My New Gemini Chat\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/gemini/chat/create",
              "host": ["{{base_url}}"],
              "path": ["gemini", "chat", "create"]
            },
            "description": "Create a new Gemini chat session"
          }
        },
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Hello! Can you help me with a coding question?\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/gemini/chat/{{chat_id}}/message",
              "host": ["{{base_url}}"],
              "path": ["gemini", "chat", "{{chat_id}}", "message"]
            },
            "description": "Send message to Gemini (expects messages array)"
          }
        },
        {
          "name": "Get Chat History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/gemini/chat/{{chat_id}}",
              "host": ["{{base_url}}"],
              "path": ["gemini", "chat", "{{chat_id}}"]
            },
            "description": "Get Gemini chat history and all messages"
          }
        },
        {
          "name": "List All Chats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/gemini/chat",
              "host": ["{{base_url}}"],
              "path": ["gemini", "chat"]
            },
            "description": "Get all Gemini chats for the user"
          }
        },
        {
          "name": "Update Chat Title",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Gemini Chat Title\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/gemini/chat/{{chat_id}}/title",
              "host": ["{{base_url}}"],
              "path": ["gemini", "chat", "{{chat_id}}", "title"]
            },
            "description": "Update the title of a Gemini chat"
          }
        },
        {
          "name": "Regenerate Response",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/gemini/chat/{{chat_id}}/regenerate",
              "host": ["{{base_url}}"],
              "path": ["gemini", "chat", "{{chat_id}}", "regenerate"]
            },
            "description": "Regenerate the last Gemini response"
          }
        },
        {
          "name": "Delete Chat",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/gemini/chat/{{chat_id}}",
              "host": ["{{base_url}}"],
              "path": ["gemini", "chat", "{{chat_id}}"]
            },
            "description": "Delete a specific Gemini chat"
          }
        },
        {
          "name": "Delete All Chats",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/gemini/chat/all",
              "host": ["{{base_url}}"],
              "path": ["gemini", "chat", "all"]
            },
            "description": "Delete all Gemini chats"
          }
        }
      ]
    },
    {
      "name": "Invitations",
      "item": [
        {
          "name": "Send Invitation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/invitations/invite",
              "host": ["{{base_url}}"],
              "path": ["invitations", "invite"]
            },
            "description": "Send invitation to new user (admin only)"
          }
        },
        {
          "name": "Resend Invitation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/invitations/resend-invitation",
              "host": ["{{base_url}}"],
              "path": ["invitations", "resend-invitation"]
            },
            "description": "Resend invitation email (admin only)"
          }
        },
        {
          "name": "Get All Invitations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/invitations",
              "host": ["{{base_url}}"],
              "path": ["invitations"]
            },
            "description": "Get all pending invitations (admin only)"
          }
        },
        {
          "name": "Accept Invitation (GET)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/invitations/accept-invitation?token={{invitation_token}}",
              "host": ["{{base_url}}"],
              "path": ["invitations", "accept-invitation"],
              "query": [
                {
                  "key": "token",
                  "value": "{{invitation_token}}"
                }
              ]
            },
            "description": "Display invitation acceptance form"
          }
        },
        {
          "name": "Accept Invitation (POST)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{invitation_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/invitations/accept-invitation",
              "host": ["{{base_url}}"],
              "path": ["invitations", "accept-invitation"]
            },
            "description": "Accept invitation and enable registration"
          }
        }
      ]
    }
    ,
    {
      "name": "Knowledge Center",
      "item": [
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "body": { "mode": "raw", "raw": "{ \"name\": \"My Category\" }" },
            "url": { "raw": "{{base_url}}/admin/knowledge/categories", "host": ["{{base_url}}"], "path": ["admin", "knowledge", "categories"] },
            "description": "Create a new knowledge category (admin)"
          }
        },
        {
          "name": "List Categories",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{access_token}}" } ],
            "url": { "raw": "{{base_url}}/admin/knowledge/categories", "host": ["{{base_url}}"], "path": ["admin", "knowledge", "categories"] },
            "description": "List all knowledge categories"
          }
        },
        {
          "name": "Delete Category",
          "request": {
            "method": "DELETE",
            "header": [ { "key": "Authorization", "value": "Bearer {{access_token}}" } ],
            "url": { "raw": "{{base_url}}/admin/knowledge/categories/:id", "host": ["{{base_url}}"], "path": ["admin", "knowledge", "categories", ":id"] },
            "description": "Delete a category by id (replace :id in the URL)"
          }
        },
        {
          "name": "Upload File",
          "request": {
            "method": "POST",
            "header": [ { "key": "Authorization", "value": "Bearer {{access_token}}" } ],
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "category_id", "value": "1", "type": "text" },
                { "key": "file", "type": "file", "src": [] }
              ]
            },
            "url": { "raw": "{{base_url}}/admin/knowledge/files", "host": ["{{base_url}}"], "path": ["admin", "knowledge", "files"] },
            "description": "Upload a file and associate it with a category (use form-data)"
          }
        },
        {
          "name": "Delete File",
          "request": {
            "method": "DELETE",
            "header": [ { "key": "Authorization", "value": "Bearer {{access_token}}" } ],
            "url": { "raw": "{{base_url}}/admin/knowledge/files/:id", "host": ["{{base_url}}"], "path": ["admin", "knowledge", "files", ":id"] },
            "description": "Delete a file by id (replace :id in the URL)"
          }
        }
      ]
    }
  ]
}
