generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int                   @id @default(autoincrement())
  username              String                @unique @db.VarChar(25)
  email                 String                @unique @db.VarChar(255)
  password_hash         String
  full_name             String                @db.VarChar(100)
  profile_image         String?
  bio                   String?
  location              String?
  verify_token          String?
  is_verified           Boolean               @default(false)
  reset_pass_token      String?
  created_at            DateTime              @default(now())
  updated_at            DateTime              @updatedAt
  refresh_token         String?
  refresh_token_expires DateTime?
  reset_pass_expires    DateTime?
  verify_token_expires  DateTime?
  account_type          AccountType           @default(PUBLIC)
  role                  Role                  @default(USER)
  chatbot_conversations ChatbotConversation[]

  @@map("users")
}

model Invitation {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  token     String   @unique
  expiresAt DateTime
  accepted  Boolean  @default(false)
  createdAt DateTime @default(now())

  @@map("invitations")
}

model ChatbotConversation {
  id         Int              @id @default(autoincrement())
  started_at DateTime         @default(now())
  user_id    Int
  title      String           @default("New Chat")
  updated_at DateTime         @updatedAt
  user       User             @relation(fields: [user_id], references: [id], onDelete: Cascade)
  messages   ChatbotMessage[]

  @@index([user_id])
  @@map("chatbot_conversations")
}

model ChatbotMessage {
  id              Int                 @id @default(autoincrement())
  sender_type     SenderType
  message         String
  sent_at         DateTime            @default(now())
  conversation_id Int
  conversation    ChatbotConversation @relation(fields: [conversation_id], references: [id], onDelete: Cascade)

  @@index([conversation_id])
  @@map("chatbot_messages")
}

enum AccountType {
  PUBLIC
  PRIVATE
}

enum Role {
  ADMIN
  USER
}

enum SenderType {
  USER
  BOT
}
